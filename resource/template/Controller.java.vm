package ${mainPath}.controller.${moduleName};

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import ${mainPath}.response.common.RestResponse;
import ${package}.entity.${moduleName}.${className};
import ${package}.service.${moduleName}.${className}Service;
import ${mainPath}.request.${moduleName}.${className}Request;




/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
@Api(description = "${comments}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;


    /**
     * 列表
     *
     * @param query 查询条件
     * @return
     */
    @ApiOperation("获取列表")
    @GetMapping("/list")
    public RestResponse<List<${className}>> list(@ModelAttribute ${className}Request query){

        List<${className}> list = ${classname}Service.list(query);

        return new RestResponse<List<${className}>>().data(list);
    }


    /**
     * 详情
     *
     * @param ${pk.attrname} 主键
     * @return
     */
    @ApiOperation("详情")
    @GetMapping("/info/{${pk.attrname}}")
    public RestResponse<${className}> info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className} ${classname} = ${classname}Service.getById(${pk.attrname});

        return new RestResponse<${className}>().data(${classname});
    }


    /**
     * 保存
     *
     * @param ${classname} 实体
     * @return
     */
    @ApiOperation("保存")
    @PostMapping("/save")
    public RestResponse save(@RequestBody ${className} ${classname}){

        ${classname}Service.save(${classname});

        return new RestResponse().message("保存成功");
    }


    /**
     * 修改
     *
     * @param ${classname} 实体
     * @return
     */
    @ApiOperation("修改")
    @PostMapping("/update")
    public RestResponse update(@RequestBody ${className} ${classname}){

        ${classname}Service.updateById(${classname});//全部更新
        
        return new RestResponse().message("修改成功");
    }


    /**
     * 批量删除
     *
     * @param ${pk.attrname}s
     * @return
     */
    @ApiOperation("批量删除")
    @PostMapping("/delete")
    public RestResponse delete(${pk.attrType}[] ${pk.attrname}s){
        ${classname}Service.removeByIds(Arrays.asList(${pk.attrname}s));

        return new RestResponse().message("删除成功");
    }

}
