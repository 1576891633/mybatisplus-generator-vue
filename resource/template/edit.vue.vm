<template>
    <div>

        <el-container>
            <el-header>
                <el-row>
                    <el-col :span="12" :offset="6" class="main-view-container-header">
                        <span>编辑资料</span>
                        <el-button class="filter-item" style="float: right" @click="$router.go(-1)" plain size="mini"
                                   icon="el-icon-back">返回
                        </el-button>

                    </el-col>

                </el-row>

            </el-header>
            <el-main>

                <el-row>
                    <el-col :span="12" :offset="6" class="main-view-container">

                        <el-form :model="userInfo" :rules="rules" ref="userInfo" label-width="150px" class="demo-userInfo">

                            <el-form-item label="手机号：" prop="mobile">
                                <el-input v-model="userInfo.mobile"></el-input>
                            </el-form-item>

                            <el-form-item label="性别：" prop="sex">
                                <el-radio-group v-model="userInfo.sex">
                                    <el-radio :label= 1>男</el-radio>
                                    <el-radio :label= 2>女</el-radio>
                                </el-radio-group>
                            </el-form-item>

                            <el-form-item label="生日：" prop="birthday">
                                <el-date-picker v-model="userInfo.birthday" align="right" type="date" :picker-options="pickerCreateDate"> </el-date-picker>
                            </el-form-item>

                            <el-form-item label="民族：" prop="nation">
                                <el-input v-model="userInfo.nation"></el-input>
                            </el-form-item>

                            <el-form-item label="身高(cm)：" prop="height">
                                <el-input v-model="userInfo.height"></el-input>
                            </el-form-item>

                            <el-form-item label="地址：" prop="address">
                                <el-input v-model="userInfo.address"></el-input>
                            </el-form-item>

                            <el-form-item label="紧急联系人姓名：" prop="emergencyContact">
                                <el-input v-model="userInfo.emergencyContact"></el-input>
                            </el-form-item>

                            <el-form-item label="紧急联系人电话：" prop="emergencyContactMobile">
                                <el-input v-model="userInfo.emergencyContactMobile"></el-input>
                            </el-form-item>

                            <el-form-item label="信用分：" prop="creditScore">
                                <el-input v-model="userInfo.creditScore"></el-input>
                            </el-form-item>

                            <el-form-item label="新密码：" prop="password1">
                                <el-input type="password" v-model="userInfo.password1"></el-input>
                            </el-form-item>

                            <el-form-item label="确认密码：" prop="password2">
                                <el-input type="password" v-model="userInfo.password2"></el-input>
                            </el-form-item>

                            <el-form-item label="账户启用状态：" prop="enabled">
                                <el-switch v-model="userInfo.enabled" active-color="#13ce66" inactive-color="#ff4949"></el-switch>
                            </el-form-item>

                            <el-form-item label="身份证：" prop="enabled">
                                <el-row :span="10" style="width: 100%;height: 300px">
                                    <el-col :span="5" style="width: 50%">
                                        <img v-bind:src="qiniuUtil.formatImgKey(userInfo.idCardPositive)" :onerror="qiniuUtil.errorImg()" class="idCardZ">
                                        <p style="text-align: center;margin-left:15%;margin-top: 1%">头像面<el-button style="margin-left: 10px" size="mini" @click="cropperVisibleShow(qiniuUtil.formatImgKey(userInfo.idCardPositive),userInfo.idCardPositive,1)">裁剪</el-button></p>
                                    </el-col>
                                    <el-col :span="5" style="width: 50%">
                                        <img v-bind:src="qiniuUtil.formatImgKey(userInfo.idCardOpposite)" :onerror="qiniuUtil.errorImg()" class="idCardZ">
                                        <p style="text-align: center;margin-left:15%;margin-top: 1%">国徽面<el-button style="margin-left: 10px" size="mini" @click="cropperVisibleShow(qiniuUtil.formatImgKey(userInfo.idCardOpposite),userInfo.idCardOpposite,2)">裁剪</el-button></p>
                                    </el-col>
                                </el-row>
                            </el-form-item>

                            <el-form-item>
                                <el-button type="primary" @click="submitForm('userInfo')">保存</el-button>
                                <el-button @click="$router.go(-1)">取消</el-button>
                            </el-form-item>
                        </el-form>


                    </el-col>
                </el-row>
            </el-main>
        </el-container>

        <el-dialog title="图片裁剪" :visible.sync="cropperVisible" @open="open">
            <div style="width: 100%;height: 300px" id="vueCropper">
                <vueCropper
                        ref="vueCropper"
                        :img="cropper.img"
                        :outputType="cropper.outputType"
                        :autoCrop="cropper.autoCrop"
                        :canMove="cropper.canMove"
                        :rotate="cropper.rotate"
                        @imgLoad="imgLoad"
                ></vueCropper>
            </div>
            <el-button @click="rotateRight" style="margin-top: 10px;margin-left: 40%">顺时针</el-button>
            <el-button @click="rotateLeft" style="margin-top: 10px">逆时针</el-button>
            <div slot="footer" class="dialog-footer">
                <el-button @click="cropperVisibleClose" style="margin-left: 30%">取 消</el-button>
                <el-button type="primary" @click="cropperVisibleSubmit">确 定</el-button>
            </div>
        </el-dialog>

    </div>
</template>

<script>
    import { validatMobile } from '@/utils/validate'
    import { validatNumber } from '@/utils/validate'
    import { getParttimeUser } from '@/api/function'
    import request from '@/utils/request'
    import ElRow from 'element-ui/packages/row/src/row'
    import VueCropper from 'vue-cropper'
    import qiniuUtil from '@/utils/qiniu'
    import { parseTime } from '@/utils/index'
    import { uuid } from '@/utils/common'
    export default {
        components: { ElRow, VueCropper },
        data() {
            // 校验规则
            const valPwd2 = (rule, value, callback) => {
                console.log(this.userInfo.password1)
                if (this.userInfo.password1 != null && this.userInfo.password1 != '') {
                    if (value === '') {
                        callback(new Error('请输入确认密码'))
                    } else if (value !== this.userInfo.password1) {
                        callback(new Error('两次输入密码不一致!'))
                    } else {
                        callback()
                    }
                } else {
                    callback()
                }
            }
            const valMobile = (rule, value, callback) => {
                if (value === '') {
                    callback(new Error('手机号不能为空'))
                } else if (!validatMobile(value)) {
                    callback(new Error('手机号格式不正确'))
                } else {
                    callback()
                }
            }
            const valPwd = (rule, value, callback) => {
                if (value == null || value == '') {
                    callback()
                } else {
                    if (value.length < 6 || value.length > 8) {
                        callback(new Error('长度在 6 到 8 个字符'))
                    } else {
                        callback()
                    }
                }
            }
            const nation = (rule, value, callback) => {
                if (value == null || value == '') {
                    callback(new Error('民族不能为空'))
                } else {
                    callback()
                }
            }
            const height = (rule, value, callback) => {
                if (value == null || value == '') {
                    callback(new Error('身高不能为空'))
                } else if (!validatNumber(value)) {
                    callback(new Error('请输入大于0的数字'))
                } else {
                    callback()
                }
            }
            const emergencyContact = (rule, value, callback) => {
                if (value == null || value == '') {
                    callback(new Error('紧急联系人姓名不能为空'))
                } else {
                    callback()
                }
            }
            const address = (rule, value, callback) => {
                if (value == null || value == '') {
                    callback(new Error('地址不能为空'))
                } else {
                    callback()
                }
            }

            return {
                qiniuUtil,
                cache: true,
                cropperVisible: false,
                cropperlLoading: null,
                userInfo: {
                    id: '',
                    mobile: '',
                    sex: '',
                    nation: '',
                    birthday: '',
                    height: '',
                    idCardPositive: '',
                    idCardOpposite: '',
                    emergencyContact: '',
                    emergencyContactMobile: '',
                    creditScore: '',
                    address: '',
                    createDate: '',
                    enabled: null,
                    password: '',
                    password2: ''
                },
                rules: {
                    password1: [
                        { required: true, validator: valPwd, trigger: 'blur' }
                    ],
                    password2: [
                        { required: true, validator: valPwd2, trigger: 'blur' }
                    ],
                    mobile: [
                        { required: true, validator: valMobile, trigger: 'blur' }
                    ],
                    emergencyContactMobile: [
                        { required: true, validator: valMobile, trigger: 'blur' }
                    ],
                    nation: [
                        { required: true, validator: nation, trigger: 'blur' }
                    ],
                    height: [
                        { required: true, validator: height, trigger: 'blur' }
                    ],
                    emergencyContact: [
                        { required: true, validator: emergencyContact, trigger: 'blur' }
                    ],
                    address: [
                        { required: true, validator: address, trigger: 'blur' }
                    ]
                },
                pickerCreateDate: {
                    disabledDate(time) {
                        return time.getTime() > Date.now()
                    }
                },
                cropper: {
                    outputType: 'jpeg',
                    autoCrop: true,
                    canMove: false,
                    original: true,
                    rotate: 0,
                    img: '',
                    tempKey: '',
                    temp: ''
                }
            }
        },
        methods: {
            submitForm(formName) {
                this.$refs[formName].validate((valid) => {
            if (valid) {
            console.log(valid)
            const url = '/parttimeUser/editParttimeUser'
            const loading = this.$loading({
            lock: true,
            text: '提交中',
            target: document.getElementById('dialog')
            })
            this.userInfo.idCardPositive =this.userInfo.idCardPositive.replace("temp:",'')
            this.userInfo.idCardOpposite=this.userInfo.idCardOpposite.replace("temp:",'')
            qiniuUtil.realKey(this.userInfo.idCardPositive,data =>{
            qiniuUtil.realKey(this.userInfo.idCardOpposite,data => {
            request({
            url: url,
            method: 'post',
            data: this.userInfo
            }).then(response => {
            loading.close()
            this.$message('保存成功')
            // 跳转页面
            this.$router.push({ name: 'user_job_user' })
            })
            })
            })


            } else {
            return false
            }
            })
            },
            cardPositive(data) {
                return 'http://p7o6hgzyd.bkt.clouddn.com/' + data
            },
            imgLoad(msg) {
                if (msg !== 'success') {
                    this.$message.error('图片加载错误,无法裁剪')
                            this.cropperVisible = false
                }
                setTimeout(_ => {
                    if (this.cropperlLoading != null) {
                        this.cropperlLoading.close()
                    }
                }, 1500)
            },
            open() {
                setTimeout(_ => {
                    this.cropperlLoading = this.$loading({
                        lock: true,
                        text: '裁剪图片准备中...',
                        target: document.getElementById('vueCropper')
                    })
                }, 300)
                setTimeout(_ => {
                    if (this.cropperlLoading != null) {
                        this.cropperlLoading.close()
                    }
                }, 10000)
            },
            cropperVisibleShow(img, key,temp) {
                this.cropperVisible = true
                this.cropper.img = img
                this.cropper.tempKey = key
                this.cropper.temp = temp
            },
            cropperVisibleClose() {
                if (this.cropperlLoading != null) {
                    this.cropperlLoading.close()
                }
                this.cropperVisible = false
            },
            cropperVisibleSubmit() {
                this.$refs.vueCropper.getCropBlob((data) => {
            const  cudtKey = 'temp:' + parseTime(new Date(), '{y}{m}{d}') + uuid(32, 16)
            this.cropper.tempKey = cudtKey
            qiniuUtil.upload(data, this.cropper.tempKey, (res) => {
            const obj = eval('(' + res + ')')
            if (obj.key != null) {
            if(this.cropper.temp == 1){
            this.userInfo.idCardPositive = obj.key
            }else{
            this.userInfo.idCardOpposite = obj.key
            }
            request({
            url: '/parttimeUser/cutting',
            method: 'get',
            params: {
            id: this.id
            }
            }).then(response => {
            this.cropperVisible = false
            this.$message(response.message)
            this.rotateClear()
            }).catch(_ => {
            this.$message.error('裁剪失败-_-!')
            })
            } else {
            this.$message.error('裁剪失败,请在尝试一次')
            }
            })
            })
            },
            rotateLeft(){//左旋转
                this.$refs.vueCropper.rotateLeft();
            },
            rotateRight(){
                this.$refs.vueCropper.rotateRight();
            },
            rotateClear(){
                this.$refs.vueCropper.rotateClear();
            }


        },
        created() {
            this.id = this.$route.query.id
            if (this.id) {
                getParttimeUser(this.id).then(res => {
                    debugger
                    console.log(res)
                    const _userInfo = this.userInfo
                    const data = res.data
                    _userInfo.id = data.id
                    _userInfo.wechat = data.wechat
                    _userInfo.name = data.name
                    _userInfo.nickname = data.nickname
                    _userInfo.mobile = data.mobile
                    _userInfo.sex = data.sex
                    _userInfo.nation = data.nation
                    _userInfo.birthday = data.birthday
                    _userInfo.idCardPositive = data.idCardPositive
                    _userInfo.idCardOpposite = data.idCardOpposite
                    _userInfo.emergencyContact = data.emergencyContact
                    _userInfo.emergencyContactMobile = data.emergencyContactMobile
                    _userInfo.creditScore = data.creditScore
                    _userInfo.address = data.address
                    _userInfo.height = data.height
                    _userInfo.createDate = data.createDate
                    _userInfo.status = data.status
                    _userInfo.enabled = data.enabled
                })
            }
        }
    }
</script>

<style scoped>
    .idCardZ{
        height: 150px;
        width: 80%;
        margin-left: 25%;
        border-radius: 20px;
    }
</style>
