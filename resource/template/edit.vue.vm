<template>
    <div>

        <el-container>
            <el-header>
                <el-row>
                    <el-col :span="12" :offset="6" class="main-view-container-header">
                        <span>编辑资料</span>
                        <el-button class="filter-item" style="float: right" @click="back" plain size="mini"
                                   icon="el-icon-back">返回
                        </el-button>

                    </el-col>
                </el-row>
            </el-header>
            <el-main>

                <el-row>
                    <el-col :span="12" :offset="6" class="main-view-container">

                        <el-form :model="${classname}Info" :rules="rules" ref="${classname}Info" label-width="150px"
                                 class="demo-userInfo">


                            #foreach ($column in $columns)

                                <el-form-item label="$column.comments：" prop="${column.attrname}">
                                    <el-input v-model="${classname}Info.${column.attrname}"></el-input>
                                </el-form-item>

                            #end

                            <el-form-item>
                                <el-button type="primary" @click="submitForm('${classname}Info')">保存</el-button>
                                <el-button @click="back">取消</el-button>
                            </el-form-item>
                        </el-form>

                    </el-col>
                </el-row>
            </el-main>
        </el-container>


    </div>
</template>

<script>

    import {info, saveOrUpdate} from '@/api/${moduleName}/${classname}/api'
    import { closeThisView, closeThisViewAndLinkTo } from '@/utils/routerUtils'


    export default {
        name: '${className}Edit',
        data() {
            return {
                cache: true,
                cropperVisible: false,
                cropperlLoading: null,
                    ${classname}Info: {
                    id: '',
            #foreach ($column in $columns)
                ${column.attrname}:'',
            #end
        },
            rules: {
            }
        ,
            pickerCreateDate: {
                disabledDate(time)
                {
                    return time.getTime() > Date.now()
                }
            }
        }
        },
        methods: {
            back() {
                closeThisView(this)
            },
            submitForm(name) {
                #set($var2 = 'this.$refs[name].validate((valid)')
                #set($var3 = 'this.$router.push')

                $var2 =>
                {
                    if (valid) {
                        const loading = this.$loading({
                            lock: true,
                            text: '提交中',
                            target: document.getElementById('dialog')
                        })
                        saveOrUpdate(this.${classname}Info).then(response => {
                            if (response.status === 20000) {
                                this.$message('保存成功')
                                closeThisViewAndLinkTo(this,
                                        { name: '${className}Index' }
                                )
                            }
                        })
                        setTimeout(() => {
                            loading.close()
                        }, 5000)
                    } else {
                        return false
                    }
                }
            )

        },
    }
    ,
    created()
    {
        this.id = this.$route.query.id
        if(this.id)
        {
            info(this.id).then(res => {
                const ${classname}Info = this.${classname}Info
                        const
                data = res.data
                        ${classname}Info.id = data.id
                #foreach ($column in $columns)
                        ${classname}Info.${column.attrname} = data.${column.attrname}
                #end

            })
        }
    }
    }
</script>

<style scoped>
</style>
